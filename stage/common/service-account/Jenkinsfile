pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jenkins-slave
    image: asia-south1-docker.pkg.dev/prj-shared-central-cicd36/repo-prj-shared-central-cicd36-uat-as1-01/jenkins-slave-for-infra-cicd:v4
    resources:
      requests:
        memory: "3000Mi"
        cpu: "2000m"
      limits:
        memory: "4000Mi"
        cpu: "3000m"
    env:
    securityContext:
      privileged: true
      runAsGroup: 0
      runAsUser: 0
  serviceAccountName: "jenkins-sa"
'''
            defaultContainer 'jenkins-slave'
        }
    }

    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', credentialsId: 'gitlab-credentials', url: 'https://gitlab.nw18devops.com/news18-devops/forbes-infra.git'
            }
        }
        
  
        stage('terraform tfsec') {
            steps {
                dir('./stage/common/service-account') {
                    script {
                        sh "tfsec . --no-colour"
                    }
                }
            }
        }

        stage('terraform checkov') {
            steps {
                dir('./stage/common/service-account') {
                    script {
                        sh "checkov --version "
                        sh "terraform init -no-color && terraform plan -out tf.plan -no-color && terraform show -json tf.plan > ./tf.json "
                        sh "TERM=dumb checkov -f tf.json --skip-check CKV_GCP_42"
                    }
                }
            }
        }

        stage('terraform init') {
            steps {
                dir('./stage/common/service-account') {
                    sh "terraform init -no-color"
                }
            }
        }

        stage('terraform plan') {
            steps {
                dir('./stage/common/service-account') {
                    sh "terraform plan -no-color"
                }
            }
        }

        stage('Terraform Apply Approval') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    input(message: 'Do you want to apply Terraform changes?', ok: 'Proceed')
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { true }
            }
            steps {
                dir('./stage/common/service-account') {
                    sh 'terraform apply -auto-approve -no-color'
                }
            }
        }
    }
}
